1.Unique path https://leetcode.com/problems/unique-paths/
  注意处理 x=1&&y=1 continue这种情况
  可以把 x=0||y=0时候 dp[x][0] = 0  dp[0][y]=0
  
 1.1 O(n) space? 滚动数组  dp[x] = dp[x]   + dp[x-1]
   可以理解为                      上面       左面
 
 1.2 从左上到右上 要求每一步只能向正右、右上或右下走，即 → ↗ ↘
    每个格子只能从左方，左上，左下过来
    for y in range(1, n):
        for x in range(m):
            //左面
            dp[x][y] = dp[x][y - 1]
            //左下面
            if x > 0:
                dp[x][y] += dp[x - 1][y - 1]
            //左上
            if x + 1 < m:
                dp[x][y] += dp[x + 1][y - 1]
                
 1.2.1 O(N) space? 
    进每个格子之后，先用个变量保存 dp[x] 的值，然后再 modify dp[x]，等到下一格 dp[x + 1] 要往回加的时候，就去加这个临时变量
     for y in range(1, n):
        pre = cur = 0

        for x in range(m):
            pre, cur = cur, dp[x]

            if x > 0:
                dp[x] += pre

            if x + 1 < m:
                dp[x] += dp[x + 1]

     return dp[0]
     
  1.2.2 起点和终点改成从左上到左下，每一步只能 ↓ ↘ ↙，求所有可能的路径数量
  for x in range(1, m):
        for y in range(n):
            dp[x][y] = dp[x - 1][y]

            if y > 0:
                dp[x][y] += dp[x - 1][y - 1]

            if y + 1 < n:
                dp[x][y] += dp[x - 1][y + 1]

    return dp[m - 1][0]

reference:https://www.1point3acres.com/bbs/thread-423857-1-1.html
https://github.com/jaychsu/algorithm/blob/c6f6c8e81aad557b8bc520b1a9298d201462c20f/other/unique_paths_with_followups.py
